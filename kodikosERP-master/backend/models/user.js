// mongoose user schema

const mongoose = require('mongoose');
const uniqueValidator = require('mongoose-unique-validator');
const bcrypt = require('bcrypt');

// schema is only a blueprint
const userSchema = mongoose.Schema({
  // unique - is for optimisations only. It will not forbid to add non unique values
  login: { type: String, required: true, unique: true },
  email: { type: String },
  department: { type: String },
  name: { type: String },
  drugieImie: { type: String },
  surname: { type: String },
  username: { type: String },
  password: { type: String, required: true },
  phone: { type: String },
  status: { type: String },
  moduly: [String],
  displayName: { type: String },
  plec: { type: String },
  pliki: [],
  uwagi: { type: String },

  contractorFields: {
    accountManager: { type: Boolean },
    accountManagerLogin: { type: Boolean },
    addBy: { type: Boolean },
    addDate: { type: Boolean },
    balance: { type: Boolean },
    ceo: { type: Boolean },
    city: { type: Boolean },
    comments: { type: Boolean },
    contrType: { type: Boolean },
    country: { type: Boolean },
    creditLimit: { type: Boolean },
    creditLimitCurrency: { type: Boolean },
    fullName: { type: Boolean },
    krs: { type: Boolean },
    modBy: { type: Boolean },
    modDate: { type: Boolean },
    nip: { type: Boolean },
    paymentDeadline: { type: Boolean },
    postcode: { type: Boolean },
    regon: { type: Boolean },
    shortName: { type: Boolean },
    status: { type: Boolean },
    street: { type: Boolean },
    countryShipping: { type: Boolean },
    streetShipping: { type: Boolean },
    cityShipping: { type: Boolean },
    postcodeShipping: { type: Boolean },
    buttonDodajKontr: { type: Boolean },
    buttonOfertaKontr: { type: Boolean },
    buttonEdytujKontr: { type: Boolean },
    buttonUsunKontr: { type: Boolean },
    widziWszystkie: { type: Boolean },
    adres: { type: Boolean },
    kontakty: { type: Boolean },
    firmy: { type: Boolean },
    projekty: { type: Boolean },
    kontBankowe: { type: Boolean },
    pliki: { type: Boolean },
    buttonPliki: { type: Boolean }
  },
  szkodliwaFields: {
    comments: { type: Boolean },
    status: { type: Boolean },
    buttonDodajKontr: { type: Boolean },
    buttonEdytujKontr: { type: Boolean },
    buttonUsunKontr: { type: Boolean },
    projekty: { type: Boolean },
    firmy: { type: Boolean },
    widziWszystkie: { type: Boolean },
    pliki: { type: Boolean },
    buttonPliki: { type: Boolean }
  },
  assortmentFields: {
    comments: { type: Boolean },
    status: { type: Boolean },
    buttonDodajKontr: { type: Boolean },
    buttonOfertaKontr: { type: Boolean },
    buttonEdytujKontr: { type: Boolean },
    buttonUsunKontr: { type: Boolean },
    projekty: { type: Boolean },
    firmy: { type: Boolean },
    widziWszystkie: { type: Boolean },
    pliki: { type: Boolean },
    buttonPliki: { type: Boolean },
  },
  sekretariatFields: {
    comments: { type: Boolean },
    status: { type: Boolean },
    buttonDodajKontr: { type: Boolean },
    buttonOfertaKontr: { type: Boolean },
    buttonEdytujKontr: { type: Boolean },
    buttonUsunKontr: { type: Boolean },
    projekty: { type: Boolean },
    firmy: { type: Boolean },
    widziWszystkie: { type: Boolean },
    pliki: { type: Boolean },
    buttonPliki: { type: Boolean },
  },
  warehouseFields: {
    comments: { type: Boolean },
    status: { type: Boolean },
    buttonDodajKontr: { type: Boolean },
    buttonOfertaKontr: { type: Boolean },
    buttonEdytujKontr: { type: Boolean },
    buttonUsunKontr: { type: Boolean },
    projekty: { type: Boolean },
    firmy: { type: Boolean },
    widziWszystkie: { type: Boolean },
    pliki: { type: Boolean },
    buttonPliki: { type: Boolean },
  },
  kluczeFields: {
    menuKluczeUprawnienia: { type: Boolean },
    menuDodajUprawnienia: { type: Boolean },
    dodajUprSaAktywne: { type: Boolean },
    menuSpis: { type: Boolean },
    menuDodajSpis: { type: Boolean },
    menuWydania: { type: Boolean },
    menuDodajWydanie: { type: Boolean },
    rejestracja: { type: Boolean },
    comments: { type: Boolean },
    status: { type: Boolean },
    buttonDodajKontr: { type: Boolean },
    buttonOfertaKontr: { type: Boolean },
    buttonEdytujKontr: { type: Boolean },
    buttonUsunKontr: { type: Boolean },
    widziWszystkie: { type: Boolean },
  },
  kluczeRejestrFields: {
    menuKluczeUprawnienia: { type: Boolean },
    menuDodajUprawnienia: { type: Boolean },
    dodajUprSaAktywne: { type: Boolean },
    menuSpis: { type: Boolean },
    menuDodajSpis: { type: Boolean },
    menuWydania: { type: Boolean },
    menuDodajWydanie: { type: Boolean },
    rejestracja: { type: Boolean },
    comments: { type: Boolean },
    status: { type: Boolean },
    buttonDodajKontr: { type: Boolean },
    buttonOfertaKontr: { type: Boolean },
    buttonEdytujKontr: { type: Boolean },
    buttonUsunKontr: { type: Boolean },
    widziWszystkie: { type: Boolean },
  },
  kluczeWydaniaFields: {
    menuKluczeUprawnienia: { type: Boolean },
    menuDodajUprawnienia: { type: Boolean },
    dodajUprSaAktywne: { type: Boolean },
    menuSpis: { type: Boolean },
    menuDodajSpis: { type: Boolean },
    menuWydania: { type: Boolean },
    menuDodajWydanie: { type: Boolean },
    rejestracja: { type: Boolean },
    comments: { type: Boolean },
    status: { type: Boolean },
    buttonDodajKontr: { type: Boolean },
    buttonOfertaKontr: { type: Boolean },
    buttonEdytujKontr: { type: Boolean },
    buttonUsunKontr: { type: Boolean },
    widziWszystkie: { type: Boolean },
  },
  przesylkiFields: {
    comments: { type: Boolean },
    status: { type: Boolean },
    buttonDodajKontr: { type: Boolean },
    buttonEdytujKontr: { type: Boolean },
    buttonUsunKontr: { type: Boolean },
    widziWszystkie: { type: Boolean },
    projekty: { type: Boolean },
    firmy: { type: Boolean },
    pliki: { type: Boolean },
    buttonPliki: { type: Boolean },
  },
  nrKartyWejsciowej: { type: String },
  nrKartyParkingowej: { type: String },
  klucze: []
});

userSchema.statics.hashPassword = function hashPassword(password) {
  return bcrypt.hashSync(password, 10);
};

userSchema.methods.isValid = function (hashedpassword) {
  return bcrypt.compareSync(hashedpassword, this.password);
};

// I'm using uniqueValidator plugin on userSchema
userSchema.plugin(uniqueValidator);

module.exports = mongoose.model('User', userSchema);
